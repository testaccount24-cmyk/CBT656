/* REXX ImageJCL                                                      */
/* .................................................................. */
/* Author  : Kannan AK                                                */
/* ImageJCL: Create JCL for IMAGECOPY for all COPYPENDs/RESTRICTs     */
/* Notice  : None                                                     */
/* Version : Alpha                                                    */
/* .................................................................. */
call tempdsn cp tempdd tempdsn
M = 'TSIN*'
G = 'X'
address ispexec
zwinttl='* Select DB2 Subsystem *'
"vput (zwinttl)"
"addpop"
"display panel(db2spnl)"
if rc = 8 then do
   'rempop'
   zedsmsg = 'Function canceled'
   'setmsg msg(isrz001)'
   exit
end
upper cname
select
  when cname  = 'A' then subsys = TEST
  when cname  = 'B' then subsys = PROD
  otherwise nop
end
redo:
address ispexec
zwinttl='* Select Tablespace/Database *'
"vput (zwinttl)"
"addpop column(27) row(3)"
"display panel(db2tpnl)"
if rc = 8 then do
   'rempop all'
   zedsmsg = 'Function canceled'
   'setmsg msg(isrz001)'
   exit
end
upper cname
select
  when cname  = 'C' then dbase = INSTANC1
  when cname  = 'D' then dbase = INSTANC2
  when cname  = 'E' then dbase = INSTANC3
  when cname  = 'F' then dbase = INSTANC4
  otherwise nop
end
if M = '' then do
   "rempop all"
   signal redo
end
upper G
if G = 'X' | G ='S' then
   restrict = 'R'
else
   restrict = 'X'
upper M
tspace = M
x = outtrap('out.','*','noconcat')
address tso "db2pend" subsys dbase tspace restrict
x = outtrap(off)
"rempop all"
J = 1
do i=1 by 1 while i <= out.trapped
   if pos('------',out.i) > 0  then leave
   J = J + 1
End
pend. = ''
k = 1
do i=j+1 by 1 while i <= out.trapped-2
   tbname = substr(out.i,1,8)
   tbtype = substr(out.i,10,2)
   tbpart = substr(out.i,15,4)
   tbstat = substr(out.i,20,18)
   if pos('COPY',tbstat) > 0  then do
      pend.k = tbname
      k=k+1;
   end
End
point   = 1
if k = 1 then do
   zedsmsg = "Nothing to display"
   "setmsg msg(isrz001)"
   signal qui
end
do i=1 by 1 while i < k
   call writejobcard
   call buildjcl
end
call eof
"edit dataset("tempdsn")"

qui :
address tso "free dd("tempdd") delete"
exit

/* invocation : call tempdsn co tempdd tempdsn */
tempdsn : procedure expose cuechar tempdd tempdsn
arg cuechar
cuechar = substr(cuechar,1,2)
d = date(j);p = sysvar(syspref);
r1 = random(100,999);r2 = random(100,999);
t = time();parse value t with hh ':' mm ':' ss;tt=hh||mm||ss
tempdsn = cuechar||d||'.t'||r1||trunc(r1*r2/random()/10)||'.z'||tt
nt = tempdsn
tempdd  = cuechar ||r2||r1
"alloc ds("nt") dd("tempdd") dsorg(ps) lrecl(80) recfm(f) new keep"
if rc \= 0 then do
       "ispexec setmsg msg(isrz002)"
       result = 'ERROR'
       exit
end
return

writejobcard :
call getjobchar
call push("//"userid()jobchar" JOB (000000),'IMAGECOPY',             ")
call push("//           MSGCLASS=X,NOTIFY=&SYSUID,CLASS=U            ")
call push("//*                                                       ")
return

buildjcl:
EOJ = "/*"
call push("//IC       EXEC  DSNUPROC,COND=(5,LT),                    ")
call push("//             SYSTEM='"subsys"',                         ")
call push("//             UID='IMAGE."pend.i"',UTPROC=''             ")
datestamp = DATE(O)
parse value datestamp with yy '/' mm '/' dd
datestamp = "D" || yy || mm || dd
sysco = userid()"." || dbase || "." || pend.i || ".SYSCO." || datestamp
call push("//SYSCOPY  DD  DSN="sysco",                               ")
call push("//             DISP=(,CATLG,DELETE),                      ")
call push("//             SPACE=(CYL,(600,100),RLSE)                 ")
call push("//SYSDBOUT DD SYSOUT=*                                    ")
call push("//SYSABOUT DD SYSOUT=*                                    ")
call push("//SYSPRINT DD SYSOUT=*                                    ")
call push("//SYSOUT   DD SYSOUT=*                                    ")
call push("//SYSIN    DD  *                                          ")
card1 = "  COPY TABLESPACE " ||dbase"."pend.i
call push(card1)
call push(EOJ)
call push("//*-------------------------------------------------------")
return

eof :
address tso
"EXECIO 0 DISKR" TEMPDD "( FINIS"
return

push :
parse arg stream
push stream
address tso
"EXECIO 1 DISKW" TEMPDD
if rc >= 2 then call qui
return

getjobchar :
alpha = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890'
  jobchar  = substr(alpha,point,1);point=point+1
  if point = 37 then point = 1
return
