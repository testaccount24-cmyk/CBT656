/* REXX BATCHSMS                                                      */
/* .................................................................. */
/* Author  : Kannan AK                                                */
/* BATCHSMS: Force change MGMTCLAS                                    */
/* Notice  : None                                                     */
/* Version : Beta                                                     */
/* .................................................................. */
arg hlq opt
      if opt \= 'ALTER' then do
         say "Option unknown."
         say "Syntax : BATCHSMS (_userid_) (ALTER)"
         exit 12
      end
sms1    = 'SAMPLE1'
sms2    = 'SAMPLE2'
sms3    = 'SAMPLE3'
cn      = 0
if opt = 'ALTER' then do
   call BuildJobCard
   call BuildJCL
end
call GetHList

do k=6 by 1 while k <= hline.0
  if pos(hlq,hline.k) > 0 then do
    if pos('CMTLIB',hline.k)  > 0 then iterate
    if pos('ISPF',hline.k)    > 0 then iterate
    if pos('SPFLOG',hline.k)  > 0 then iterate
    if pos('USERLOG',hline.k) > 0 then iterate
    if pos('TERMLOG',hline.k) > 0 then iterate
    parse value hline.k with dsname . . . . . . dsorg .
    if dsorg = 'PS' then do
       call SMS
    end
  end
end

if opt = 'ALTER' then do
   call GoJCL
end

qui :
exit 0

SMS :
str = "'" || dsname || "'"
address ispexec
f = OUTTRAP('OUTL.','*','NOCONCAT')
address tso "LISTCAT ENTRIES("str") ALL"
f = OUTTRAP(OFF)
       if RC > 0 then do
          ZEDSMSG = '*Obtain Failed*'
          "ISPEXEC SETMSG MSG(ISRZ000)"
          exit 0
       end
if pos('$IAM',outl.4) > 0  then
   say dsname IAM

do i=1 by 1 while i <= outl.trapped

  if pos('MANAGEMENTCLAS',outl.i) > 0  then do
       mgmtclas = outl.i
       TTAB  = "-()"
       mgmtclas = TRANSLATE(mgmtclas," ",TTAB)
       parse value mgmtclas with m1 m2 m3 m4
       mgmtclas = m4
  end
end
if mgmtclas \= sms1 & mgmtclas \= sms2 & mgmtclas \= sms3 then do
   if opt = '' then do
      say left(dsname,60)  || left((strip(mgmtclas)),8)
   end
   else do
      if opt = 'ALTER' then do
        cn = cn + 1
        say left(cn,5) || ,
            left(dsname,46)  || ,
            left(strip(mgmtclas),10) || ,
            left(strip(dsorg),4)
        queue "  ALTER " || ,
                left(dsname,45)  || ,
                "MGMTCLAS(" || ,
               'SAMPLECL'|| ') '
      end
   end
end
return

GetHList :
d = date(j)
t = time();parse value t with hh ':' mm ':' ss;tt=hh||mm||ss
hlistdsn = "'"||userid()||".HLIST"||'.t'tt||'.j'd||"'"
hlistdd  = 'HL'tt
address tso "hlist level('"hlq"') ods("hlistdsn")"
address tso "alloc ds("hlistdsn") dd("hlistdd") old reu"
address tso "execio * diskr" hlistdd "(stem hline. finis"
address tso "free dd("hlistdd") delete"
return


BuildJobCard :
address tso
call wj("//"userid()"$ JOB (000000),'BT:KANNAN AK',                   ")
call wj("//         CLASS=P,MSGCLASS=X,NOTIFY=&SYSUID,TYPRUN=SCAN     ")
return

BuildJCL :
call wj("//*---------------------------------------------------------*")
call wj("//STEP0001 EXEC PGM=IDCAMS                                   ")
call wj("//SYSPRINT DD SYSOUT=*                                       ")
call wj("//SYSIN    DD *                                              ")
return

wj :
parse arg stream
queue stream
return

GoJCL :
call wj("/*                                                           ")
address tso "alloc f(fjcl) sysout writer(intrdr)"
address tso "execio" queued()" diskw fjcl (finis"
return
