/* REXX ----------------------------------------------------------*/
/* This exec creates IDCAMS DEFINE JCL for a VSAM dataset.        */
/* Invoked as a prefix command from a 3.4 DSLIST panel or as a    */
/* command with the cluster name as an argument, it puts the user */
/* into en edit session with the created JCL and IDCAMS DEFINE    */
/* statements.                                                    */
/*----------------------------------------------------------------*/
Arg dsn .
If Left(dsn,1) = "'"    Then /* dsn arg from 3.4 comes with tickies */
   Do
      dsn = Strip(Translate(dsn," ","'"))
   End
Else               /* dsn entered as primary command without tickies */
   Do
      dsn = Userid()"."dsn
   End
qdsn = "'"dsn"'"   /* qdsn gets quoted version of dsn with tickies */
Stat = SYSDSN(qdsn)  /* See if data set exists */
If Stat <> "OK" Then
   Do
     Say qdsn "not found."
     Exit
   End
/* Make sure it's VSAM */
fc = LISTDSI(qdsn)
If fc > 4 Then
   Do
      Say "LISTDSI returned function code" fc
      Say "Reason Code =" SYSREASON
      Exit
   End
dsorg = SYSDSORG
If dsorg <> "VS" Then
   Do
      Say "DV supports only VSAM data sets."
      Exit
   End
Call OUTTRAP O.
"LISTCAT ENTRY("qdsn") ALL"
If rc <> 0 then do
   Say "Error from LISTCAT. RC =" rc
   Exit
End
section = "CLUSTER"
dvolser = ""
ivolser = ""
Do l = 1 to o.0
   o.l = translate(o.l," ","-")
   word1 = Word(o.l,1)
   word2 = Word(o.l,2)
   If word1 = "IN" Then    /* Change sections on "IN CAT" lines */
      Do
        p = l - 1
        section = Word(o.p,1)
      End
   Select     /* Select based on section of listcat output */
      When section = "CLUSTER" Then
         Select /* Select based on line within a given section */
            When word1 = "CLUSTER"           Then
               clname = Word(o.l,2)
            When word1 = "DATA"              Then
               dname = Word(o.l,2)
            When word1 = "INDEX"             Then
               iname = Word(o.l,2)
            Otherwise Nop
         End /* End of Select on line within CLUSTER section */
      When section = "DATA" Then
         Select /* Select based on line within a given section */
            When word1 = "KEYLEN"            Then
               Parse var o.l . keylen . avglrecl . bufspace . dcisize .
            When word1 = "RKP"               Then
               Parse var o.l . rkp . maxlrecl .
            When Left(word1,8) = "SHROPTNS"  Then
               Do
                  Parse var o.l "(" shroptns ")" recovery unique ,
                                erase type writechk imbed replicat .
                  n = l + 1
                  Parse var o.n ordered reuse spanned .
                  writechk = Insert("EC",writechk,Index(writechk,"H"))
               End
            When word1 = "REC" & word2 = "INSERTED"  Then
                  dfreeci = Word(o.l,6)
            When word1 = "REC" & word2 = "UPDATED"  Then
                  dfreeca = Word(o.l,6)
            When word1 = "SPACE" & word2 = "TYPE"  Then
                  dspacetype = Word(o.l,3)
            When word1 = "SPACE" & word2 = "PRI"  Then
                  dspacepri = Word(o.l,3)
            When word1 = "SPACE" & word2 = "SEC"  Then
                  dspacesec = Word(o.l,3)
            When word1 = "VOLSER" Then
                  dvolser = dvolser Word(o.l,2)
            Otherwise Nop
         End /* End of Select on line within DATA section */
      When section = "INDEX" Then
         Select /* Select based on line within a given section */
            When word1 = "KEYLEN"            Then
               icisize = Word(o.l,8)
            When word1 = "SPACE" & word2 = "TYPE"  Then
                  ispacetype = Word(o.l,3)
            When word1 = "SPACE" & word2 = "PRI"  Then
                  ispacepri = Word(o.l,3)
            When word1 = "SPACE" & word2 = "SEC"  Then
                  ispacesec = Word(o.l,3)
            When word1 = "VOLSER" Then
                  ivolser = ivolser Word(o.l,2)
            Otherwise Nop
         End /* End of Select on line within INDEX section */
      Otherwise Nop
   End /* End of Select on section */
End /* End of  Do l = 1 to o.0 */
Call OUTTRAP "OFF"
Newstack
"ISPEXEC VGET (ZLLGJOB1 ZLLGJOB2 ZLLGJOB3 ZLLGJOB4) PROFILE"
Do i = 1 To 4
   If Value(zllgjob || i) <> "" Then Queue Value(zllgjob || i)
End
Queue "//IDCAMS   EXEC PGM=IDCAMS"
Queue "//SYSPRINT DD SYSOUT=*"
Queue "//SYSIN    DD *"
Queue " DEFINE CLUSTER -"
Queue "           (NAME("clname") -"
Queue "           "type" -"
Queue "           SHAREOPTIONS("shroptns") -"
Queue "           "erase" -"
Queue "           "recovery" -"
Queue "           "writechk" -"
Queue "           "reuse") -"
Queue "        DATA -"
Queue "           (NAME("dname") -"
If type = "INDEXED" Then
   Do
      Queue "           KEYS("keylen rkp") -"
   End
Queue "           CONTROLINTERVALSIZE("dcisize") -"
Queue "           "dspacetype"("dspacepri dspacesec") -"
Queue "           FREESPACE("dfreeci dfreeca") -"
Queue "           RECORDSIZE("avglrecl maxlrecl") -"
Queue "           "spanned" -"
Queue "           VOLUMES("dvolser") -"
If type = "INDEXED" Then
   Do
      Queue "           )-"
      Queue "        INDEX -"
      Queue "           (NAME("iname") -"
      Queue "           CONTROLINTERVALSIZE("icisize") -"
      Queue "           "ispacetype"("ispacepri ispacesec") -"
      Queue "           "imbed" -"
      Queue "           "ordered" -"
      Queue "           "replicat"E -"
      Queue "           VOLUMES("ivolser"))"
   End
Else  Queue "           )"
Queue "/*"
Call MSG 'OFF'
Address ispexec 'VGET (ZSCREEN) SHARED'
ddname='$TRAP$'zscreen
'ALLOC F('ddname') UNIT(VIO) DSO(PS) RECFM(F B) LRECL(80) NEW DEL REU'
'EXECIO 'Queued()' DISKW 'ddname' (FINIS'
Address ispexec 'LMINIT DATAID(TRAP) DDNAME('ddname') ENQ(SHR)'
Address ispexec 'EDIT   DATAID('trap')'
Address ispexec 'LMFREE DATAID('trap')'
'FREE F('ddname')'
Delstack
Exit
