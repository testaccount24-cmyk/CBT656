/* REXX VB */
Arg Count Dsn
Parms = 'Count('Count')'
'ISPEXEC CONTROL ERRORS RETURN'
If SysDsn(Dsn) \='OK' then DO
    ZedSmsg=''
    'ISPEXEC SETMSG MSG(ISRZ000)'
    Exit(12)
End
/**** Create temp file ddnames     ****/
Call GenDd
/**** Allocate the VSAM file.      ****/
'ALLOC F('Vsam') DA('Dsn') SH REU '
/**** Get the dataset's attributes.****/
Call GetFileAttr
/**** Allocate the temp QSAM file. ****/
'ALLOC F('Flat') NEW CAT REU RECFM('Recfm') LRECL('Lrecl') BLKSIZE(0)',
    SpaceStr' DSORG(PS)'
If Rc \=0 Then do
    Say 'ALLOC F('Flat') NEW CAT REU RECFM('Recfm') LRECL('Lrecl') BLKSIZE(0)',
        SpUnit ' SP('Pri' 'Sec') DSORG(PS)'
    Exit
End
/*X=OutTrap(Msgs.) */
/**** Copy the VSAM to the QSAM.   ****/
'REPRO IFI('Vsam') OFI('Flat') 'Parms
/**** Free the VSAM                ****/
'FREE F('Vsam')'
ZedSmsg=''
ZedLmsg=''
/**** Browse the QSAM file.        ****/
Call BrowseDd
/**** Free the QSAM file.          ****/
'FREE F('Flat')'
/**** Adios, amigos...             ****/
Exit
/**** Create unique file names.    ****/
GenDd:
Gdd='F'||Time(s)
Flat='FL'||Time(s)
Vsam='VS'||Time(s)
Return
/**** Invoke ISPF browse service   ****/
BrowseDd:
ADDRESS ISPEXEC
'LMINIT DATAID(DAID) DDNAME('Flat') ENQ(SHR)'
'ISPEXEC BROWSE DATAID('Daid')'
'LMFREE  DATAID('Daid')'
ADDRESS TSO
Return
/**** Get the LRECL and space      ****/
/**** attributes for the file.     ****/
/**** Invoke a listcat and examine ****/
/**** the output. If non-vsam      ****/
/**** use the LISTDSI function to  ****/
/**** get them.                    ****/
GetFileAttr:
'ALLOC F('Gdd') NEW DEL REU RECFM(V B) LRECL(129) BLKSIZE(0) TR SP(5)',
    'DSORG(PS)'
'LISTCAT ENT('Dsn') ALL OUTFILE('Gdd')'
/**** Load a stem variable with    ****/
/**** the output from the listcat. ****/
'EXECIO * DISKR 'Gdd' (STEM LCDATA. FINIS)'
'FREE F('Gdd')'
RecFm='V B'     /* We'll assume variable for VSAM */
If Word(LcData.2,1)='0NONVSAM' Then do
    X=ListDsi(Vsam FILE)
    If x=0 then do
        RecFm=SysRecFm
        lrecfm=Length(RecFm)
        RecFm=''
        /****   Split the recfm string up  ****/
        /****   as FB has to become F B    ****/
        Do a=1 to lrecfm by +1
            RecFm=RecFm||subStr(SysRecFm,a,1)||' '
        End
        Lrecl=SysLrecl
        SpUnit=SysUnits
        Pri=SysPrimary
        Sec=SysSeconds
        SpaceStr=SpUnit||' SP('Pri' 'Sec')'
        /****   If we're going to be over  ****/
        /****   100 cylinders then let the ****/
        /****   user know and give an      ****/
        /****   option to override.        ****/
        If ((SpUnit='CYLINDER' & (Pri>99 | Sec>99)) |,
            (SpUnit='TRACK' & (Pri>1485 | Sec>1485))) Then do
            Say 'Allocation is 'SpaceStr
            Say 'Enter revised allocation or hit ENTER to accept...'
            Pull Ans
            If Ans \='' Then do
                SpaceStr=Ans
            End
        End
        Return
    End
    Say ListDsi(Vsam FILE)
    Exit
End
/**** If VSAM, process the listcat ****/
/**** output to extract the info...****/
Do x=3 to LcData.0 by +1
    If Word(LcData.x,1)='ATTRIBUTES' Then do
        y=x+1
        z=x+2
        OneLine=Translate(LcData.y,' ','-')
        TwoLine=Translate(LcData.z,' ','-')
        Lrecl=Word(TwoLine,4)
        Lrecl=Lrecl+4         /* Add 4 for variable QSAM format. */
        Iterate
    End
    If Word(LcData.x,1)='ALLOCATION' Then do
        y=x+1
        z=x+2
        a=x+3
        OneLine=Translate(LcData.y,' ','-')
        TwoLine=Translate(LcData.z,' ','-')
        TreLine=Translate(LcData.a,' ','-')
        SpUnit=Word(OneLine,3)
        Pri=Word(TwoLine,3)
        Sec=Word(TreLine,3)
        SpaceStr=SpUnit||' SP('Pri' 'Sec')'
        /****   If we're going to be over  ****/
        /****   100 cylinders then let the ****/
        /****   user know and give an      ****/
        /****   option to override.        ****/
        If ((SpUnit='CYLINDER' & (Pri>99 | Sec>99)) |,
            (SpUnit='TRACK' & (Pri>1485 | Sec>1485))) Then do
            Say 'Space allocation is in excess of 100 cylinders...'
            Say 'Allocation is 'SpaceStr
            Say 'Enter revised allocation or hit ENTER to accept...'
            Say 'or enter EXIT to cancel command.'
            Pull Ans
            If Ans=Exit Then do
                'FREE F('Vsam')'
                Exit
            End
            If Ans \='' Then do
                SpaceStr=Ans
            End
        End
        Leave    /* We're done here... */
    End
End
Return
