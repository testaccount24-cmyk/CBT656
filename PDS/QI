/* Rexx qi */
arg word
if word = '' | word = 'QWORD' then address ispexec 'VGET (QWORD)'
if QWORD = '' then exit
else word = QWORD
word = space(translate(word," ","'"))
if word = '' then exit
parse source system . cmdname .
address ispexec
'control errors return'
 a1 = 'FsssssssssssssssssssssssLsssssssssssssssO'
 a2 = 'FsssssssssssssssssssssssLsssssssssssssssO'
 a3 = 'FsssssssssssssssssssssssLsssssssssssssssO'
 a4 = 'DsssssssssssssssssssssssGsssssssssssssssM'
 s1 = '##########################################'
 h0 = copies('s',23)
 h1 = 'E'h0'PssssssssssssPsssssssssssssssssssssssPsssssssssssssssN'
 h2 = 'D'h0'GssssssssssssGsssssssssssssssssssssssGsssssssssssssssM'
 s2 = copies('#',80)
address isredit
'MACRO PROCESS'
if rc = 20 then signal commandline
'(CL,CC) = CURSOR'
if cc = 0 then exit

delim = "~'!*%&-_=+\{};:`<,>/?" '"'
'ISREDIT (LINE) = LINE .ZCSR'
end = length(line)
start = end - verify(reverse(line)" ",delim,"M",end-cc+1)+2
end = verify(line"",delim,"M",cc)-1

if start > end then exit
word = substr(line,start,end-start+1)

commandline :
address tso
x = listdsi("'"word"'" directory norecall smsinfo)
if sysreason = 5 then do
   address tso
   clear
   "LISTC ENTRIES('"word"') GDG ALL"
   exit
end
if sysmsglvl2 \= ' ' then do
  zedlmsg = sysmsglvl2
  address ispexec "setmsg msg(isrz001)"
  "ISREDIT CURSOR = "cl cc
  exit
end
          dsname     =   sysdsname
          volume     =   sysvolume
          unit       =   sysunit
          dsorg      =   sysdsorg
          recfm      =   sysrecfm
          lrecl      =   syslrecl
          blksize    =   sysblksize
          units      =   sysunits
          alloc      =   sysalloc
          used       =   sysused
          primary    =   sysprimary
          seconds    =   sysseconds
          extents    =   sysextents
          call j2s strip(syscreate)
          create     =   result
          exdate     =   sysexdate
          dssms      =   sysdssms
          dataclas   =   sysdataclass
          storclas   =   sysstorclass
          mgmtclas   =   sysmgmtclass
          password   =   syspassword
          racfa      =   sysracfa
          updated    =   sysupdated
          members    =   sysmembers
          adirblk    =   sysadirblk
          udirblk    =   sysudirblk
          trkscyl    =   systrkscyl
          blkstrk    =   sysblkstrk

          if dataclas = '' then dataclas = 'NONE'
          if storclas = '' then storclas = 'NONE'
          if mgmtclas = '' then mgmtclas = 'NONE'

Call DisplayPanel
qui :
"ISREDIT CURSOR = "cl cc
exit

DisplayPanel :
Address 'ISPEXEC'
exec_line=1
if system = 'TSO' then
  Address tso 'ALLOC NEW CAT F($TMPLIB$) DSO(PO) DIR(1) SP(3,3) TRACK
               DA($WWWSAMP.TEMP.ISPFLIB) REUSE
               RECFM(F B) BLKSIZE(0) LRECL(80) UNIT(SYSALLDA)'
Call MakeMember
if system = 'TSO' then
  Address tso 'ALLOC F($TMPLIB$) OLD DA($WWWSAMP.TEMP.ISPFLIB) REUSE'
If system = 'TSO' Then
  Do
    'VGET ZENVIR'
    If substr(zenvir,6,1)>='4' Then stack='STACK' /* Use STACK in V4 */
    Else stack = ''
    'LIBDEF ISPPLIB LIBRARY ID($TMPLIB$)' stack
    'LIBDEF ISPMLIB LIBRARY ID($TMPLIB$)' stack
  End
Else
  Do
    'LIBDEF ISPPLIB FILE ID(ISRNULL $TMPLIB$ A)'
    'LIBDEF ISPMLIB FILE ID(ISRNULL $TMPLIB$ A)'
  End
Do Until rc > 0
  'DISPLAY PANEL(QIPNL)'
End

'LIBDEF ISPPLIB '
'LIBDEF ISPMLIB '
If system = 'TSO' Then Address tso 'FREE F($TMPLIB$) DELETE'
Else                   Address '' 'ERASE * $TMPLIB$ A '

Do queued();Pull;End
Return

MakeMember :
Do queued();Pull;End
Do Until substr(line,1,7)='/*PANEL'
  line = sourceline(exec_line)
  exec_line=exec_line+1
End
Parse Var line . panelname .
Do until substr(line,1,2)='*/'
  line = sourceline(exec_line)
  if substr(line,1,2)Â¬='*/' then
    Queue line
  exec_line=exec_line+1
End
if system = 'TSO' then
  do
    pands='$WWWSAMP.TEMP.ISPFLIB('panelname')'
    Address tso 'ALLOC OLD F($TMPLIB$) DSO(PO) DIR(1) SP(3,3) TRACK
                da('pands') RECFM(F B) BLKSIZE(0) LRECL(80) REUSE
                UNIT(SYSALLDA)'
    Address 'TSO' 'EXECIO 'queued()' DISKW $TMPLIB$ ( FINIS'
  end
else
 do
  Address '' 'ERASE 'panelname' $TMPLIB$ A '
 Address '' 'EXECIO 'queued()' DISKW 'panelname' $TMPLIB$ A 1 F ( FINIS'
 end
Do queued();Pull;End
Return

/*PANEL QIPNL
)ATTR
! TYPE(CH) GE(ON)
% TYPE(TEXT)   INTENS(HIGH) SKIP(ON) COLOR(TURQ)
@ TYPE(OUTPUT) INTENS(LOW)  JUST(LEFT)  PAD(' ') CAPS(OFF) COLOR(WHITE)
$ TYPE(OUTPUT) INTENS(HIGH) SKIP(ON) COLOR(YELLOW)
* AREA(DYNAMIC) SCROLL(OFF) EXTEND(OFF)
# TYPE(CHAR)   COLOR(TURQ) GE(ON)
04 TYPE(ABSL) GE(ON)
)BODY
%COMMAND ===>_ZCMD

%Dataset Name           $dsname                                                +
 *h1,s2                                                                        *
!|% Volume serial       !|@volume    !|% Data class          !|@dataclas     !|
!|% Device type         !|@unit      !|% Storage class       !|@storclas     !|
!|% Organization        !|@dsorg     !|% Management class    !|@mgmtclas     !|
!|% Record format       !|@recfm     !*a1,s1                                  *
!|% Record length       !|@lrecl     !|% Password protection !|@password     !|
!|% Block size          !|@blksize   !|% RACF attribute      !|@racfa        !|
!|% Allocation units    !|@units     !|% Change indicator    !|@updated      !|
!|% Space allocated     !|@alloc     !*a2,s1                                  *
!|% Space used          !|@used      !|% Members in directory!|@members      !|
!|% Primary allocation  !|@primary   !|% Allocated dir blocks!|@adirblk      !|
!|% Secondary allocation!|@seconds   !|% Used dir blocks     !|@udirblk      !|
!|% Extents used        !|@extents   !*a3,s1                                  *
!|% Creation date       !|@create    !|% Tracks per cylinder !|@trkscyl      !|
!|% Expiration date     !|@exdate    !|% Blocks per track    !|@blkstrk      !|
!|% Type of dataset     !|@dssms     !|                      !|              !|
 *h2,s2                                                                        *

)INIT
&ZWINTTL = ''
)PROC
)END
*/
